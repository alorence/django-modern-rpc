# Note: while tox currently supports config in pyproject.toml, for now it only support ini-style config passed
# as a big multi-line string value (under the key "tool.tox.legacy_tox_ini"). It is currently cleaner to keep the
# tox.ini file until tox support a proper toml-based configuration

[tox]
# See:
#   - https://docs.djangoproject.com/en/2.2/faq/install/#what-python-version-can-i-use-with-django
#   - https://docs.djangoproject.com/en/3.2/faq/install/#what-python-version-can-i-use-with-django
#   - https://docs.djangoproject.com/en/4.0/faq/install/#what-python-version-can-i-use-with-django
envlist=
  py{310,311}-django{32,40,41}
  py{38,39}-django{22,30,31,32,40,41}
  py{36,37}-django{21,22,30,31,32}
  py35-django{21,22}
  black
  pylint
  mypy
  flake8

isolated_build = true
skip_missing_interpreters = true
skipsdist = true

[testenv]
allowlist_externals = poetry
                      sed
deps =
    # Define pytest version to overrides poetry's "multiple constraint dependencies" specification, badly
    # rendered in requirements file. pytest 6.1.* will be installed on python 3.5, pytest 6.2.* on python 3.6+
    pytest==6.*

    django21: Django==2.1.*
    django22: Django==2.2.*
    django30: Django==3.0.*
    django31: Django==3.1.*
    django32: Django==3.2.*
    django40: Django==4.0.*
    django41: Django==4.1a1

# A future release of Poetry (probably 1.2) may introduce some new features to help running tox correctly,
# avoiding such hacks to get project's dev dependencies installed.
commands =
    poetry export --without-hashes --dev -o {env:TOX_ENV_DIR}/requirements.tox.txt
    # Remove Django dependency from requirements since it is installed by tox "deps"
    sed -i -E 's/^[Dd]jango==.+$//g' {env:TOX_ENV_DIR}/requirements.tox.txt
    # Remove pytest dependencies (2 lines in requirements) as the content produced by "poetry export" is invalid
    # due to usage of "multiple constraint dependencies". Tox managed dependency to pytest==6.* will install the correct
    # version depending on python interpreter
    sed -i -E 's/^pytest=.+$//g' {env:TOX_ENV_DIR}/requirements.tox.txt
    # Install remaining dependencies
    pip install -r {env:TOX_ENV_DIR}/requirements.tox.txt
    # Display Django version, just to be sure...
    django-admin --version
    # Run tests
    pytest {posargs}

[testenv:black]
deps = black
commands = black .

[testenv:flake8]
deps = flake8
commands = flake8 .

[testenv:mypy]
deps =
  mypy
  django-stubs
  types-docutils
  types-Markdown
  packaging
commands = mypy modernrpc

[testenv:pylint]
deps = pylint
commands = pylint --exit-zero modernrpc
